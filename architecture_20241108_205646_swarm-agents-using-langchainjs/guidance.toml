# SPARC Framework Project Configuration

[project]
name = "langchain-swarm-agents"
description = "swarm agents using langchainjs"
version = "0.1.0"

[architecture]
content = """
## Component: AgentManager
Manages the lifecycle and coordination of agents in the swarm:
- Create and destroy agents
- Monitor agent health
- Coordinate task distribution
- Handle agent communication

## Component: CommunicationService
Handles all inter-agent communication:
- Message routing
- State synchronization
- Event broadcasting
- Connection management

## Component: TaskScheduler
Manages task distribution and execution:
- Task queue management
- Priority handling
- Load balancing
- Task status tracking

## Component: StateManager
Handles distributed state management:
- State synchronization
- Conflict resolution
- State persistence
- Recovery management

## Component: MonitoringService
Provides system monitoring and metrics:
- Performance tracking
- Resource utilization
- Error logging
- Health checks
"""

# Component organization
component_style = "PascalCase"
test_prefix = "test_"
source_suffix = ".ts"

# Directory structure
src_dir = "src"
test_dir = "tests"
docs_dir = "docs"

[implementation]
# Code generation settings
max_attempts = 3
test_first = true
type_hints = true
docstring_style = "Google"

[testing]
# Testing requirements
min_coverage = 85
unit_test_required = true
integration_test_required = true

[quality]
# Code quality requirements
max_complexity = 8
max_line_length = 88
require_type_hints = true
require_docstrings = true

[security]
# Security requirements
require_input_validation = true
require_authentication = true
require_authorization = true

[deployment]
# Deployment configuration
containerize = true
ci_cd_required = true
monitoring_required = true
required_platforms = ["linux"]

[documentation]
# Documentation requirements
readme_required = true
api_docs_required = true
architecture_docs_required = true
changelog_required = true
